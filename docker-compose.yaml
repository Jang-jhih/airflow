version: '3.7'

x-connections: &commonConnections
    AIRFLOW__CORE__EXECUTOR: 'CeleryExecutor'
    AIRFLOW__CELERY__RESULT_BACKEND: 'db+postgresql://airflow:airflow@postgres:5432/airflow'
    AIRFLOW__CELERY__BROKER_URL: 'redis://redis:6379/1'

x-airflow-environment: &airflowEnvironment
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres:5432/airflow'
    PYTHONPATH: '/opt/airflow/dags'
    AIRFLOW_HOME: '/opt/airflow'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'FALSE'
    AIRFLOW__WEBSERVER__NAVBAR_COLOR: '#bca0dc'
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'TRUE'
    AIRFLOW__WEBSERVER__SECRET_KEY: '5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8'
    # echo -n "password" | sha256sum


x-default-user: &defaultUser
    USERNAME: 'airflow'
    PASSWORD: 'airflow'
    ROLE: 'Admin'
    FIRSTNAME: 'Firstname'
    LASTNAME: 'Lastname'
    EMAIL: 'username@domain.com'

x-airflow-volume: &airflow-volume
    volumes:
        - &dags "./dags:/opt/airflow/dags"
        - &plugins "./plugins:/opt/airflow/plugins"
        # - &data "./data:/opt/airflow/data"
        

        
services:
    init:
        build:
            context: .
            dockerfile: Dockerfile
        command: version
        environment:
            <<: *defaultUser
            <<: *commonConnections
            <<: *airflowEnvironment
        depends_on:
            - postgres
        deploy:
          resources:
            limits:
              cpus: '0.50'
              memory: 500M


    postgres:
        image: postgres:12-alpine
        environment:
            POSTGRES_USER: airflow
            POSTGRES_PASSWORD: airflow
            POSTGRES_DB: airflow
        ports:
            - 5432:5432
        volumes:
            - postgres-db-volume:/var/lib/postgresql/data


    redis:
        image: redis:6.0.9-alpine

    scheduler:
        build:
            context: .
            dockerfile: Dockerfile
        depends_on:
            - init
        environment:
            <<: *commonConnections
            <<: *airflowEnvironment
            # <<: *defaultUser
        <<: *airflow-volume

        command: scheduler

    webserver:
        build:
            context: .
            dockerfile: Dockerfile
        depends_on:
            - init
        environment:
            <<: *commonConnections
            <<: *airflowEnvironment
            # <<: *defaultUser
        ports:
            - 58080:8080

        <<: *airflow-volume
        command: webserver
        restart: always

    flower:
        build:
            context: .
            dockerfile: Dockerfile
        depends_on:
            - init
        environment:
            <<: *commonConnections
            <<: *airflowEnvironment
            <<: *defaultUser

        <<: *airflow-volume
        ports:
            - 5555:5555
        command: flower

    worker:
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            <<: *commonConnections
            <<: *airflowEnvironment

        <<: *airflow-volume
        depends_on:
            - init
        command: worker

    # sqlite:
        # image: nouchka/sqlite3
        # hostname: sqlite



    # mysql:
    #     image: mysql:latest
    #     hostname: mysql

    #     volumes:
    #         # - mysql-data:/var/lib/mysql
    #         - ./data:/var/lib/mysql

    #     environment:
    #         MYSQL_ROOT_PASSWORD: airflow
    #         MYSQL_DATABASE: stock
    #     ports:
    #     - "3306:3306"


    # mongodb:
    #     image: mongo
    #     hostname: mongodb
    #     volumes:
    #         # - './data:/data/db'
    #       - monge-db-volume:/data/db
    #     environment:
    #         - MONGO_INITDB_ROOT_USERNAME=airflow
    #         - MONGO_INITDB_ROOT_PASSWORD=airflow
    #     ports:
    #     - 27017:27017

    # selenium:
    #     image: seleniarm/standalone-chromium
    #     hostname: selenium
    #     ports:
    #         - 4444:4444




volumes:
  postgres-db-volume:
  monge-db-volume:
  mysql-data:

networks:
    datahub_network:
        external: true